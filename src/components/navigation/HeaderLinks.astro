---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
        padding: 0.1rem 0;
        
	}
	a.active {
		font-weight: bolder;
        position: relative;
	}

    a.active::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: currentColor;
        animation: border 0.5s cubic-bezier(0.77, 0, 0.175, 1);
    }

    @keyframes border {
        0% {
            width: 0;
        }
        100% {
            width: 100%;
        }
    }

</style>
