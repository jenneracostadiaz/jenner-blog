---
import Layout from '../../layouts/Layout.astro';
import GridBlog from '../../components/elements/GridBlog.astro';
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";


export async function getStaticPaths() {
    const allPosts = await getCollection("blog");

    const tags: string[] = [];

    allPosts.forEach((post) => {
        (post.data.tags ?? []).forEach((tag) => {
            tags.push(tag.toLowerCase());
        });
    });

    return Array.from(new Set(tags)).map((tag) => {
        return {
        params: { tag },
        // only keep the blogposts that contain the tag itself
        props: {
            blogposts: allPosts.filter((post) =>
            (post.data.tags ?? []).map((tag) => tag.toLowerCase()).includes(tag),
            ),
        },
        };
    });
    
}

interface Props {
  tag: string;
  blogposts: CollectionEntry<"blog">[];
}

const { blogposts } = Astro.props;

const { tag } = Astro.params;
---
<Layout title={tag}>
    <main class="container">
        <h1>Posts etiquetados con: <span>{tag}</span></h1>
        <GridBlog posts={blogposts} />
    </main>
</Layout>

<style>
    h1 {
        color: var(--white);
        background-size: 400%;
        background-position: 0%;
        font-size: 2.5rem;
        margin-bottom: 3rem;
    }
    h1 span {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
        font-weight: 300;
    }
</style>